{"version":3,"file":"index.mjs","sources":["../lib/main.js"],"sourcesContent":["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2024 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isnanf from '@stdlib/math-base-assert-is-nanf';\nimport gcdf from '@stdlib/math-base-special-gcdf';\n\n\n// MAIN //\n\n/**\n* Computes the least common multiple (lcm) of two single-precision floating-point numbers.\n*\n* @param {integer} a - integer\n* @param {integer} b - integer\n* @returns {integer} least common multiple\n*\n* @example\n* var v = lcmf( 21, 6 );\n* // returns 42\n*\n* @example\n* var v = lcmf( 3.14, 6 );\n* // returns NaN\n*\n* @example\n* var v = lcmf( NaN, 6 );\n* // returns NaN\n*/\nfunction lcmf( a, b ) {\n\tvar d;\n\tif ( a === 0 || b === 0 ) {\n\t\treturn 0;\n\t}\n\tif ( a < 0 ) {\n\t\ta = -a;\n\t}\n\tif ( b < 0 ) {\n\t\tb = -b;\n\t}\n\n\t// Note: we rely on `gcdf` to perform further argument validation...\n\td = gcdf( a, b );\n\tif ( isnanf( d ) ) {\n\t\treturn d;\n\t}\n\treturn ( a / d ) * b;\n}\n\n\n// EXPORTS //\n\nexport default lcmf;\n"],"names":["lcmf","a","b","d","gcdf","isnanf"],"mappings":";;oMA+CA,SAASA,EAAMC,EAAGC,GACjB,IAAIC,EACJ,OAAW,IAANF,GAAiB,IAANC,EACR,GAEHD,EAAI,IACRA,GAAKA,GAEDC,EAAI,IACRA,GAAKA,GAINC,EAAIC,EAAMH,EAAGC,GACRG,EAAQF,GACLA,EAECF,EAAIE,EAAMD,EACpB"}